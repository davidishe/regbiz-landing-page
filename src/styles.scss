@import "./styles/sizes.scss";
@import "./styles/colors.scss";
@import "./styles/variables.scss";
@import "./styles/buttons.scss";
@import "./styles/breadcrumb.scss";
@import "./styles/material.scss";

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import "~@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$MyAppClient-primary: mat-palette($mat-grey, A700, A800, A900);
$MyAppClient-accent: mat-palette($mat-pink, A200, A100, A400);
$MyAppClient-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$MyAppClient-theme: mat-light-theme(
  (
    color: (
      primary: $MyAppClient-primary,
      accent: $MyAppClient-accent,
      warn: $MyAppClient-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($MyAppClient-theme);

/* You can add global styles to this file, and also import other style files */

*,
html,
body {
  box-sizing: border-box;
  margin-right: 0rem;
  margin-left: 0rem;
  padding-left: 0rem;
  padding-right: 0rem;
  padding-top: 0rem;
  padding-bottom: 0rem;
  margin-top: 0rem;
  outline: none;
  -ms-overflow-style: none;
}

body,
html {
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  padding-bottom: 0px;
  padding-left: 0px;
  padding-right: 0px;
  padding-top: 0rem;
  margin: 0;
  font-size: 1rem;
  color: rgba(8, 9, 44, 0.848);
}

html {
  background-color: var(--background);
  h2,
  h3,
  h4,
  h5 {
    font-weight: 700;
  }

  .container {
    margin: 0rem 0rem;
    padding-top: 0rem;
    padding-left: 0rem;
    padding-right: 0rem;
  }

  .cdk-overlay-pane {
    snack-bar-container {
      background-color: #202020;

      simple-snack-bar {
        span {
          color: white;
          opacity: 1;
          width: 100%;
          text-align: center;
        }
      }
    }
  }
}

/* хром, сафари */
*::-webkit-scrollbar {
  width: 0;
}

body {
  margin: 0;
  height: auto;
}

.spec-container {
  padding-left: 100px;
  padding-right: 100px;
  background-color: transparent !important;
  width: 100%;
  max-width: 1370px !important;
}

.spec-inner {
  padding-left: 30px;
  padding-right: 30px;
  width: 100%;
}

@media (max-width: 1000px) and (min-width: 770px) {
  .spec-container {
    padding-left: 40px;
    padding-right: 40px;
  }
}

@media (max-width: 770px) {
  .spec-container {
    padding-left: 30px;
    padding-right: 30px;
  }
}

@media (max-width: 375px) {
  .spec-inner {
    padding: 0px;
  }
}

@media (max-width: 320px) {
  .spec-container {
    padding-left: 10px;
    padding-right: 10px;
  }
}
